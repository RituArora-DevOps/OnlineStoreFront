@model ECommerceSecureApp.Models.ViewModels.OrderHistoryVM
@{
    ViewData["Title"] = "Order Details";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Order Details #@Model.OrderId</h2>
        <div>
            <a href="@Url.Action("Orders", "Customer")" class="btn btn-outline-secondary me-2">
                <i class="fas fa-arrow-left"></i> Back to Orders
            </a>
            <a href="@Url.Action("Dashboard", "Customer")" class="btn btn-outline-primary">
                <i class="fas fa-home"></i> Dashboard
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Order Information -->
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <strong>Order ID:</strong> #@Model.OrderId
                    </div>
                    <div class="mb-3">
                        <strong>Order Date:</strong> @Model.CreatedDate.ToString("MMMM dd, yyyy 'at' h:mm tt")
                    </div>
                    @if (Model.ModifiedDate.HasValue)
                    {
                        <div class="mb-3">
                            <strong>Last Updated:</strong> @Model.ModifiedDate.Value.ToString("MMMM dd, yyyy 'at' h:mm tt")
                        </div>
                    }
                    <div class="mb-3">
                        <strong>Status:</strong> 
                        <span class="badge @(Model.OrderStatus.ToLower() switch {
                            "pending" => "bg-warning",
                            "processing" => "bg-info", 
                            "shipped" => "bg-primary",
                            "delivered" => "bg-success",
                            "cancelled" => "bg-danger",
                            _ => "bg-secondary"
                        })">@Model.OrderStatus</span>
                    </div>
                    @if (Model.Payment != null)
                    {
                        <div class="mb-3">
                            <strong>Payment Method:</strong> @Model.Payment.GetType().Name.Replace("Payment", "")
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body p-0">
                    @if (Model.OrderItems.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product</th>
                                        <th class="text-center">Quantity</th>
                                        <th class="text-end">Price</th>
                                        <th class="text-end">Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderItems)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (item.HasImage)
                                                    {
                                                        <img src="@Url.Action("ProductImage", "Picture", new { productId = item.ProductId })" 
                                                             alt="@item.ProductName" class="me-3" style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;">
                                                    }
                                                    else
                                                    {
                                                        <img src="~/images/no-image.png" alt="No Image" 
                                                             class="me-3" style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;">
                                                    }
                                                    <div>
                                                        <div class="fw-medium">@item.ProductName</div>
                                                        <small class="text-muted">Product ID: @item.ProductId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">@item.Quantity</td>
                                            <td class="text-end">@item.PriceAtOrder.ToString("C")</td>
                                            <td class="text-end fw-medium">@item.Subtotal.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <p class="text-muted">No items found for this order.</p>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="h5 mb-0">Total:</span>
                        <span class="h4 text-primary mb-0">@Model.Total.ToString("C")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
