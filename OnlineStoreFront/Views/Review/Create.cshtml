@model OnlineStoreFront.Models.Business.ProductReview

@{
    ViewData["Title"] = "Write a Review";
    var product = ViewBag.Product as OnlineStoreFront.Models.Business.Product;
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Write a Review</h4>
                </div>
                <div class="card-body">
                    <!-- Product Info -->
                    <div class="mb-4">
                        <h5>@product?.Name</h5>
                        <p class="text-muted">@product?.Description</p>
                        <p><strong>Price:</strong> $@product?.Price.ToString("F2")</p>
                    </div>

                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <input asp-for="ProductId" type="hidden" />

                        <div class="mb-3">
                            <label asp-for="Rating" class="form-label">Rating *</label>
                            <div class="rating-input">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <input type="radio" asp-for="Rating" value="@i" id="rating@(i)" class="d-none" />
                                    <label for="rating@(i)" class="rating-star" data-rating="@i">â˜…</label>
                                }
                            </div>
                            <span asp-validation-for="Rating" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Comment" class="form-label">Your Review</label>
                            <textarea asp-for="Comment" class="form-control" rows="5" 
                                      placeholder="Share your experience with this product..."></textarea>
                            <span asp-validation-for="Comment" class="text-danger"></span>
                            <div class="form-text">Maximum 1000 characters</div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="ProductReviews" asp-route-productId="@product?.ProductId" class="btn btn-secondary">
                                Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-star"></i> Submit Review
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ratingStars = document.querySelectorAll('.rating-star');
            const ratingInput = document.querySelector('input[name="Rating"]:checked');
            
            // Set initial rating if any
            if (ratingInput) {
                highlightStars(parseInt(ratingInput.value));
            }
            
            ratingStars.forEach(star => {
                star.addEventListener('click', function() {
                    const rating = parseInt(this.dataset.rating);
                    document.querySelector(`input[name="Rating"][value="${rating}"]`).checked = true;
                    highlightStars(rating);
                });
                
                star.addEventListener('mouseenter', function() {
                    const rating = parseInt(this.dataset.rating);
                    highlightStars(rating);
                });
            });
            
            document.querySelector('.rating-input').addEventListener('mouseleave', function() {
                const checkedInput = document.querySelector('input[name="Rating"]:checked');
                if (checkedInput) {
                    highlightStars(parseInt(checkedInput.value));
                } else {
                    highlightStars(0);
                }
            });
            
            function highlightStars(rating) {
                ratingStars.forEach((star, index) => {
                    if (index < rating) {
                        star.classList.add('active');
                    } else {
                        star.classList.remove('active');
                    }
                });
            }
        });
    </script>
}

<style>
    .rating-input {
        display: flex;
        gap: 5px;
        font-size: 2em;
    }
    
    .rating-star {
        cursor: pointer;
        color: #ddd;
        transition: color 0.2s;
    }
    
    .rating-star:hover,
    .rating-star.active {
        color: #ffc107;
    }
    
    .rating-star:hover ~ .rating-star {
        color: #ddd;
    }
</style>
